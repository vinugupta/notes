Jenkins

Declarative pipeline
pipeline {
    agent any
    tools {
        maven 'apache-maven-3.0.1' 
    }
triggers {
        cron('H */4 * * 1-5')
    }
 parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
    }
  options {
        timeout(time: 1, unit: 'HOURS') 
    }
 stages {
        stage('Example Build') {
            agent { docker 'maven:3-alpine' } 
            steps {
                echo 'Hello, Maven'
                sh 'mvn --version'
            }
        }
        stage('Example Test') {
            agent { docker 'openjdk:8-jre' } 
            steps {
                echo 'Hello, JDK'
                sh 'java -version'
            }
        }
Scripted Pipeline, like Declarative Pipeline, is built on top of the underlying Pipeline sub-system.Unlike Declarative, Scripted Pipeline is effectively a general purpose DSL [2] built with Groovy.Most functionality provided by the Groovy language is made available to users of Scripted Pipeline,which means it can be a very expressive and flexible tool with which one can author continuous delivery pipelines.
node {
    stage('Example') {
        if (env.BRANCH_NAME == 'master') {
            echo 'I only execute on the master branch'
        } else {
            echo 'I execute elsewhere'
        }
    }
}
